module pp/extensions/Function-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  trans/pp
  coq-signatures/extensions/Function-sig


imports
  coq-signatures/Gallina-sig
  coq-signatures/Options-sig
  coq-signatures/Lexical-sig


imports
  pp/Gallina-pp
  pp/Options-pp
  pp/Lexical-pp


strategies
  prettyprint-example =
    prettyprint-Coq


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-Coq-start-symbols


strategies
  prettyprint-Coq =
    prettyprint-Term

  prettyprint-Term :
    Function(t1__, t2__, t3__, t4__, t5__) -> [ H(
                                                  [SOpt(HS(), "0")]
                                                , [ S("Function ")
                                                  , t1__'
                                                  , S(" ")
                                                  , t2__'
                                                  , t3__'
                                                  , S(" : ")
                                                  , t4__'
                                                  ]
                                                )
                                              , t5__'
                                              ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Ident)> t1__
    with t2__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-H-list(prettyprint-Binder|" ")> t2__
    with t3__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-OptDecreaseAnnot)> t3__
    with t4__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Type)> t4__
    with t5__' := <pp-indent(|"2")> [ <is-string ; pp-one-Z(prettyprint-origin-term)
                                       <+ pp-one-Z(prettyprint-Term)> t5__
                                    ]

  is-Term =
    ?Function(_, _, _, _, _)

  get-indent :
    ( Function(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> indent
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           case ?5 :
             indent := "  "
           otherwise :
             indent := ""
         end

  get-separator :
    ( Function(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> separator
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := " "
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           case ?5 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    ( Function(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> ws
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           case ?3 :
             ws := ""
           case ?4 :
             ws := " "
           case ?5 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  is-Term =
    fail

  prettyprint-Term :
    amb([h|hs]) -> <prettyprint-Term> h

  prettyprint-Ident :
    Ident-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[Ident]]")]
                       )
                     ]

  is-Ident =
    ?Ident-Plhdr()

  is-SDF-placeholder =
    ?Ident-Plhdr()

  prettyprint-Binder :
    Binder-Plhdr() -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("[[Binder]]")]
                        )
                      ]

  is-Binder =
    ?Binder-Plhdr()

  is-SDF-placeholder =
    ?Binder-Plhdr()

  prettyprint-OptDecreaseAnnot :
    OptDecreaseAnnot-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("[[OptDecreaseAnnot]]")]
                                  )
                                ]

  is-OptDecreaseAnnot =
    ?OptDecreaseAnnot-Plhdr()

  is-SDF-placeholder =
    ?OptDecreaseAnnot-Plhdr()

  prettyprint-Type :
    Type-Plhdr() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[Type]]")]
                      )
                    ]

  is-Type =
    ?Type-Plhdr()

  is-SDF-placeholder =
    ?Type-Plhdr()

  prettyprint-Term :
    Term-Plhdr() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[Term]]")]
                      )
                    ]

  is-Term =
    ?Term-Plhdr()

  is-SDF-placeholder =
    ?Term-Plhdr()


strategies
  prettyprint-Coq =
    prettyprint-OptDecreaseAnnot

  prettyprint-Coq =
    prettyprint-DecreaseAnnot

  prettyprint-OptDecreaseAnnot :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  is-OptDecreaseAnnot =
    ?None()

  get-indent :
    (None(), index) -> indent
    with switch !index
           otherwise :
             indent := ""
         end

  get-separator :
    (None(), index) -> separator
    with switch !index
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (None(), index) -> ws
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-OptDecreaseAnnot :
    DecreaseAnnot(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ S(" {")
                               , t1__'
                               , S("}")
                               ]
                             )
                           ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-DecreaseAnnot)> t1__

  is-OptDecreaseAnnot =
    ?DecreaseAnnot(_)

  get-indent :
    (DecreaseAnnot(t1__), index) -> indent
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  get-separator :
    (DecreaseAnnot(t1__), index) -> separator
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (DecreaseAnnot(t1__), index) -> ws
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-DecreaseAnnot :
    DecreaseStruct(t1__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("struct "), t1__']
                              )
                            ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Ident)> t1__

  is-DecreaseAnnot =
    ?DecreaseStruct(_)

  get-indent :
    (DecreaseStruct(t1__), index) -> indent
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  get-separator :
    (DecreaseStruct(t1__), index) -> separator
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (DecreaseStruct(t1__), index) -> ws
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-DecreaseAnnot :
    DecreaseMeasure(t1__, t2__) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [ S("measure ")
                                       , t1__'
                                       , S(" ")
                                       , t2__'
                                       ]
                                     )
                                   ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Term)> t1__
    with t2__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Ident)> t2__

  is-DecreaseAnnot =
    ?DecreaseMeasure(_, _)

  get-indent :
    (DecreaseMeasure(t1__, t2__), index) -> indent
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  get-separator :
    (DecreaseMeasure(t1__, t2__), index) -> separator
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (DecreaseMeasure(t1__, t2__), index) -> ws
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-DecreaseAnnot :
    DecreaseWF(t1__, t2__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("wf ")
                                  , t1__'
                                  , S(" ")
                                  , t2__'
                                  ]
                                )
                              ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Term)> t1__
    with t2__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Ident)> t2__

  is-DecreaseAnnot =
    ?DecreaseWF(_, _)

  get-indent :
    (DecreaseWF(t1__, t2__), index) -> indent
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  get-separator :
    (DecreaseWF(t1__, t2__), index) -> separator
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (DecreaseWF(t1__, t2__), index) -> ws
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  is-OptDecreaseAnnot =
    fail

  is-DecreaseAnnot =
    fail

  prettyprint-OptDecreaseAnnot :
    amb([h|hs]) -> <prettyprint-OptDecreaseAnnot> h

  prettyprint-DecreaseAnnot :
    amb([h|hs]) -> <prettyprint-DecreaseAnnot> h

  prettyprint-OptDecreaseAnnot :
    OptDecreaseAnnot-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("[[OptDecreaseAnnot]]")]
                                  )
                                ]

  is-OptDecreaseAnnot =
    ?OptDecreaseAnnot-Plhdr()

  is-SDF-placeholder =
    ?OptDecreaseAnnot-Plhdr()

  prettyprint-DecreaseAnnot :
    DecreaseAnnot-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("[[DecreaseAnnot]]")]
                               )
                             ]

  is-DecreaseAnnot =
    ?DecreaseAnnot-Plhdr()

  is-SDF-placeholder =
    ?DecreaseAnnot-Plhdr()

  prettyprint-Term :
    Term-Plhdr() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[Term]]")]
                      )
                    ]

  is-Term =
    ?Term-Plhdr()

  is-SDF-placeholder =
    ?Term-Plhdr()

  prettyprint-Ident :
    Ident-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[Ident]]")]
                       )
                     ]

  is-Ident =
    ?Ident-Plhdr()

  is-SDF-placeholder =
    ?Ident-Plhdr()