module coq-pp/Qid-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  trans/pp
  coq-signatures/Qid-sig


imports
  coq-signatures/Lexical-sig


imports
  coq-pp/Lexical-pp


strategies
  prettyprint-example =
    prettyprint-Coq


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-Coq-start-symbols


strategies
  prettyprint-Coq =
    prettyprint-QualId

  prettyprint-QualId :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-QualId)
    where t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                    <+ pp-one-Z(prettyprint-Ident)> t1__

  prettyprint-QualId :
    QId(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [t1__', S("."), t2__']
                         )
                       ]
    with t1__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-QualId)> t1__
    with t2__' := <is-string ; pp-one-Z(prettyprint-origin-term)
                   <+ pp-one-Z(prettyprint-Ident)> t2__

  is-QualId =
    ?QId(_, _)

  get-indent :
    (QId(t1__, t2__), index) -> indent
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  get-separator :
    (QId(t1__, t2__), index) -> separator
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  get-leading-ws :
    (QId(t1__, t2__), index) -> ws
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  is-QualId =
    fail

  prettyprint-QualId :
    amb([h|hs]) -> <prettyprint-QualId> h

  prettyprint-QualId :
    QualId-Plhdr() -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("[[QualId]]")]
                        )
                      ]

  is-QualId =
    ?QualId-Plhdr()

  is-SDF-placeholder =
    ?QualId-Plhdr()

  prettyprint-Ident :
    Ident-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[Ident]]")]
                       )
                     ]

  is-Ident =
    ?Ident-Plhdr()

  is-SDF-placeholder =
    ?Ident-Plhdr()