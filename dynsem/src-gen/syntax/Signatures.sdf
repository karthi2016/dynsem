module Signatures
imports Common ds

exports
  context-free syntax
    "signature" SignatureSection* -> ModuleSection {cons("Signatures")}

  context-free syntax
    CONTENTCOMPLETE -> ModuleSection {cons("COMPLETION-ModuleSection")}

  context-free syntax
    "sorts" SortDecl* -> SignatureSection {cons("Sorts")}
    ID                -> SortDecl         {cons("SortDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> SortDecl         {cons("COMPLETION-SortDecl")}

  context-free syntax
    "variables" VariableScheme* -> SignatureSection {cons("VariableSchemes")}
    ID ":" Type                 -> VariableScheme   {cons("VariableScheme")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> VariableScheme   {cons("COMPLETION-VariableScheme")}

  context-free syntax
    "aliases" AliasDecl* -> SignatureSection {cons("Aliases")}
    ID ":" Type          -> AliasDecl        {cons("AliasDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> AliasDecl        {cons("COMPLETION-AliasDecl")}

  context-free syntax
    "constructors" ConsDecl*               -> SignatureSection {cons("Constructors")}
    ID ":" Type ConsAnnos                  -> ConsDecl         {cons("NullaryConsDecl")}
    ID ":" {Type "*"}+ "->" Type ConsAnnos -> ConsDecl         {cons("ConsDecl")}
                                           -> ConsAnnos        {cons("NoAnnos")}
    "{" {ConsAnno ","}* "}"                -> ConsAnnos        {cons("Annos")}
    "implicit"                             -> ConsAnno         {cons("ImplicitAnno")}
    ID ":" {Type "*"}* "-->" Type          -> ConsDecl         {cons("FunDecl")}
    ID                                     -> Type             {cons("SimpleSort")}
    "List" "(" Type ")"                    -> Type             {cons("ListSort")}
    MapType                                -> Type             
    "Map" "<" Type "," Type ">"            -> MapType          {cons("MapSort")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> ConsAnnos        {cons("COMPLETION-ConsAnnos")}
    CONTENTCOMPLETE -> ConsAnno         {cons("COMPLETION-ConsAnno")}
    CONTENTCOMPLETE -> ConsDecl         {cons("COMPLETION-ConsDecl")}
    CONTENTCOMPLETE -> Type             {cons("COMPLETION-Type")}
    CONTENTCOMPLETE -> MapType          {cons("COMPLETION-MapType")}

  context-free syntax
    "native" "datatypes" NativeTypeDecl*                 -> SignatureSection   {cons("NativeDataTypes")}
    STRING                                               -> JSNIPPET           
    JSNIPPET "as" ID "{" NativeFunctionDecl* "}"         -> NativeTypeDecl     {cons("NativeBaseTypeDecl")}
    JSNIPPET "as" ID "->" ID "{" NativeFunctionDecl* "}" -> NativeTypeDecl     {cons("NativeSubTypeDecl")}
    ID ":" {Type "*"}* "->" Type                         -> NativeFunctionDecl {cons("NativeFunctionDecl")}
    ID ":" Type                                          -> NativeFunctionDecl {cons("NativeNoArgFunctionDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection   {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> JSNIPPET           {cons("COMPLETION-JSNIPPET")}
    CONTENTCOMPLETE -> NativeTypeDecl     {cons("COMPLETION-NativeTypeDecl")}
    CONTENTCOMPLETE -> NativeFunctionDecl {cons("COMPLETION-NativeFunctionDecl")}

  context-free syntax
    "native" "operators" NativeOpDecl* -> SignatureSection {cons("NativeOperators")}
    ID ":" {Type "*"}+ "->" Type       -> NativeOpDecl     {cons("NativeOpDecl")}
    ID ":" Type                        -> NativeOpDecl     {cons("NullaryNativeOpDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> NativeOpDecl     {cons("COMPLETION-NativeOpDecl")}

  context-free syntax
    "native" "constructors" NativeConsDecl* -> SignatureSection {cons("NativeConstructors")}
    ID ":" {Type "*"}+ "->" Type            -> NativeConsDecl   {cons("NativeConsDecl")}
    ID ":" Type                             -> NativeConsDecl   {cons("NullaryNativeConsDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> NativeConsDecl   {cons("COMPLETION-NativeConsDecl")}

  context-free syntax
    "arrows" DeclaredArrow* -> SignatureSection {cons("ArrowDeclarations")}
    ArrowDeclaration        -> DeclaredArrow    
    Type "-" ID "->" Type   -> ArrowDeclaration {cons("ArrowDecl")}
    Type "-->" Type         -> ArrowDeclaration {cons("DefaultArrowDecl")}

  context-free syntax
    CONTENTCOMPLETE -> SignatureSection {cons("COMPLETION-SignatureSection")}
    CONTENTCOMPLETE -> ArrowDeclaration {cons("COMPLETION-ArrowDeclaration")}