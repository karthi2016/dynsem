module src-gen/check/Signatures-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/Signatures-sig


imports
  src-gen/signatures/Common-sig
  src-gen/signatures/ds-sig


imports
  src-gen/check/Common-chk
  src-gen/check/ds-chk


strategies
  check-example =
    check-ModuleSection

  check-ModuleSection :
    Signatures(t1__) -> <id>
    with <map(check-SignatureSection <+ error-SignatureSection)> t1__

  is-ModuleSection-with-constructor =
    ?Signatures(_)

  is-ModuleSection-with-constructor =
    fail

  check-ModuleSection :
    amb([h|hs]) -> <check-ModuleSection> h

  error-ModuleSection =
    debug(!"Unexpected constructor. Expected constructor from sort ModuleSection instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-SortDecl

  check-SignatureSection :
    Sorts(t1__) -> <id>
    with <map(check-SortDecl <+ error-SortDecl)> t1__

  is-SignatureSection-with-constructor =
    ?Sorts(_)

  check-SortDecl :
    SortDecl(t1__) -> <id>
    with <(check-ID <+ error-ID)> t1__

  is-SortDecl-with-constructor =
    ?SortDecl(_)

  is-SignatureSection-with-constructor =
    fail

  is-SortDecl-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-SortDecl :
    amb([h|hs]) -> <check-SortDecl> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-SortDecl =
    debug(!"Unexpected constructor. Expected constructor from sort SortDecl instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-VariableScheme

  check-SignatureSection :
    VariableSchemes(t1__) -> <id>
    with <map(check-VariableScheme <+ error-VariableScheme)> t1__

  is-SignatureSection-with-constructor =
    ?VariableSchemes(_)

  check-VariableScheme :
    VariableScheme(t1__, t2__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-VariableScheme-with-constructor =
    ?VariableScheme(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-VariableScheme-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-VariableScheme :
    amb([h|hs]) -> <check-VariableScheme> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-VariableScheme =
    debug(!"Unexpected constructor. Expected constructor from sort VariableScheme instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-AliasDecl

  check-SignatureSection :
    Aliases(t1__) -> <id>
    with <map(check-AliasDecl <+ error-AliasDecl)> t1__

  is-SignatureSection-with-constructor =
    ?Aliases(_)

  check-AliasDecl :
    AliasDecl(t1__, t2__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-AliasDecl-with-constructor =
    ?AliasDecl(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-AliasDecl-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-AliasDecl :
    amb([h|hs]) -> <check-AliasDecl> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-AliasDecl =
    debug(!"Unexpected constructor. Expected constructor from sort AliasDecl instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-ConsAnnos

  check-example =
    check-ConsAnno

  check-example =
    check-ConsDecl

  check-example =
    check-Type

  check-example =
    check-MapType

  check-SignatureSection :
    Constructors(t1__) -> <id>
    with <map(check-ConsDecl <+ error-ConsDecl)> t1__

  is-SignatureSection-with-constructor =
    ?Constructors(_)

  check-ConsDecl :
    NullaryConsDecl(t1__, t2__, t3__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__
    with <(check-ConsAnnos <+ error-ConsAnnos)> t3__

  is-ConsDecl-with-constructor =
    ?NullaryConsDecl(_, _, _)

  check-ConsDecl :
    ConsDecl(t1__, t2__, t3__, t4__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <map(check-Type <+ error-Type)> t2__
    with <(check-Type <+ error-Type)> t3__
    with <(check-ConsAnnos <+ error-ConsAnnos)> t4__

  is-ConsDecl-with-constructor =
    ?ConsDecl(_, _, _, _)

  check-ConsAnnos :
    NoAnnos() -> <id>

  is-ConsAnnos-with-constructor =
    ?NoAnnos()

  check-ConsAnnos :
    Annos(t1__) -> <id>
    with <map(check-ConsAnno <+ error-ConsAnno)> t1__

  is-ConsAnnos-with-constructor =
    ?Annos(_)

  check-ConsAnno :
    ImplicitAnno() -> <id>

  is-ConsAnno-with-constructor =
    ?ImplicitAnno()

  check-ConsDecl :
    FunDecl(t1__, t2__, t3__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <map(check-Type <+ error-Type)> t2__
    with <(check-Type <+ error-Type)> t3__

  is-ConsDecl-with-constructor =
    ?FunDecl(_, _, _)

  check-Type :
    SimpleSort(t1__) -> <id>
    with <(check-ID <+ error-ID)> t1__

  is-Type-with-constructor =
    ?SimpleSort(_)

  check-Type :
    ListSort(t1__) -> <id>
    with <(check-Type <+ error-Type)> t1__

  is-Type-with-constructor =
    ?ListSort(_)

  check-Type :
    t1__ -> <id>
    where not(is-Type-with-constructor)
    where <(check-MapType <+ error-MapType)> t1__

  check-MapType :
    MapSort(t1__, t2__) -> <id>
    with <(check-Type <+ error-Type)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-MapType-with-constructor =
    ?MapSort(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-ConsAnnos-with-constructor =
    fail

  is-ConsAnno-with-constructor =
    fail

  is-ConsDecl-with-constructor =
    fail

  is-Type-with-constructor =
    fail

  is-MapType-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-ConsAnnos :
    amb([h|hs]) -> <check-ConsAnnos> h

  check-ConsAnno :
    amb([h|hs]) -> <check-ConsAnno> h

  check-ConsDecl :
    amb([h|hs]) -> <check-ConsDecl> h

  check-Type :
    amb([h|hs]) -> <check-Type> h

  check-MapType :
    amb([h|hs]) -> <check-MapType> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-ConsAnnos =
    debug(!"Unexpected constructor. Expected constructor from sort ConsAnnos instead. ")

  error-ConsAnno =
    debug(!"Unexpected constructor. Expected constructor from sort ConsAnno instead. ")

  error-ConsDecl =
    debug(!"Unexpected constructor. Expected constructor from sort ConsDecl instead. ")

  error-Type =
    debug(!"Unexpected constructor. Expected constructor from sort Type instead. ")

  error-MapType =
    debug(!"Unexpected constructor. Expected constructor from sort MapType instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-JSNIPPET

  check-example =
    check-NativeTypeDecl

  check-example =
    check-NativeFunctionDecl

  check-SignatureSection :
    NativeDataTypes(t1__) -> <id>
    with <map(check-NativeTypeDecl <+ error-NativeTypeDecl)> t1__

  is-SignatureSection-with-constructor =
    ?NativeDataTypes(_)

  check-JSNIPPET :
    t1__ -> <id>
    where not(is-JSNIPPET-with-constructor)
    where <(check-STRING <+ error-STRING)> t1__

  check-NativeTypeDecl :
    NativeBaseTypeDecl(t1__, t2__, t3__) -> <id>
    with <(check-JSNIPPET <+ error-JSNIPPET)> t1__
    with <(check-ID <+ error-ID)> t2__
    with <map(check-NativeFunctionDecl <+ error-NativeFunctionDecl)> t3__

  is-NativeTypeDecl-with-constructor =
    ?NativeBaseTypeDecl(_, _, _)

  check-NativeTypeDecl :
    NativeSubTypeDecl(t1__, t2__, t3__, t4__) -> <id>
    with <(check-JSNIPPET <+ error-JSNIPPET)> t1__
    with <(check-ID <+ error-ID)> t2__
    with <(check-ID <+ error-ID)> t3__
    with <map(check-NativeFunctionDecl <+ error-NativeFunctionDecl)> t4__

  is-NativeTypeDecl-with-constructor =
    ?NativeSubTypeDecl(_, _, _, _)

  check-NativeFunctionDecl :
    NativeFunctionDecl(t1__, t2__, t3__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <map(check-Type <+ error-Type)> t2__
    with <(check-Type <+ error-Type)> t3__

  is-NativeFunctionDecl-with-constructor =
    ?NativeFunctionDecl(_, _, _)

  check-NativeFunctionDecl :
    NativeNoArgFunctionDecl(t1__, t2__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-NativeFunctionDecl-with-constructor =
    ?NativeNoArgFunctionDecl(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-JSNIPPET-with-constructor =
    fail

  is-NativeTypeDecl-with-constructor =
    fail

  is-NativeFunctionDecl-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-JSNIPPET :
    amb([h|hs]) -> <check-JSNIPPET> h

  check-NativeTypeDecl :
    amb([h|hs]) -> <check-NativeTypeDecl> h

  check-NativeFunctionDecl :
    amb([h|hs]) -> <check-NativeFunctionDecl> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-JSNIPPET =
    debug(!"Unexpected constructor. Expected constructor from sort JSNIPPET instead. ")

  error-NativeTypeDecl =
    debug(!"Unexpected constructor. Expected constructor from sort NativeTypeDecl instead. ")

  error-NativeFunctionDecl =
    debug(!"Unexpected constructor. Expected constructor from sort NativeFunctionDecl instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-NativeOpDecl

  check-SignatureSection :
    NativeOperators(t1__) -> <id>
    with <map(check-NativeOpDecl <+ error-NativeOpDecl)> t1__

  is-SignatureSection-with-constructor =
    ?NativeOperators(_)

  check-NativeOpDecl :
    NativeOpDecl(t1__, t2__, t3__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <map(check-Type <+ error-Type)> t2__
    with <(check-Type <+ error-Type)> t3__

  is-NativeOpDecl-with-constructor =
    ?NativeOpDecl(_, _, _)

  check-NativeOpDecl :
    NullaryNativeOpDecl(t1__, t2__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-NativeOpDecl-with-constructor =
    ?NullaryNativeOpDecl(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-NativeOpDecl-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-NativeOpDecl :
    amb([h|hs]) -> <check-NativeOpDecl> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-NativeOpDecl =
    debug(!"Unexpected constructor. Expected constructor from sort NativeOpDecl instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-NativeConsDecl

  check-SignatureSection :
    NativeConstructors(t1__) -> <id>
    with <map(check-NativeConsDecl <+ error-NativeConsDecl)> t1__

  is-SignatureSection-with-constructor =
    ?NativeConstructors(_)

  check-NativeConsDecl :
    NativeConsDecl(t1__, t2__, t3__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <map(check-Type <+ error-Type)> t2__
    with <(check-Type <+ error-Type)> t3__

  is-NativeConsDecl-with-constructor =
    ?NativeConsDecl(_, _, _)

  check-NativeConsDecl :
    NullaryNativeConsDecl(t1__, t2__) -> <id>
    with <(check-ID <+ error-ID)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-NativeConsDecl-with-constructor =
    ?NullaryNativeConsDecl(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-NativeConsDecl-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-NativeConsDecl :
    amb([h|hs]) -> <check-NativeConsDecl> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-NativeConsDecl =
    debug(!"Unexpected constructor. Expected constructor from sort NativeConsDecl instead. ")


strategies
  check-example =
    check-SignatureSection

  check-example =
    check-DeclaredArrow

  check-example =
    check-ArrowDeclaration

  check-SignatureSection :
    ArrowDeclarations(t1__) -> <id>
    with <map(check-DeclaredArrow <+ error-DeclaredArrow)> t1__

  is-SignatureSection-with-constructor =
    ?ArrowDeclarations(_)

  check-DeclaredArrow :
    t1__ -> <id>
    where not(is-DeclaredArrow-with-constructor)
    where <(check-ArrowDeclaration <+ error-ArrowDeclaration)> t1__

  check-ArrowDeclaration :
    ArrowDecl(t1__, t2__, t3__) -> <id>
    with <(check-Type <+ error-Type)> t1__
    with <(check-IDNOHYPH <+ error-IDNOHYPH)> t2__
    with <(check-Type <+ error-Type)> t3__

  is-ArrowDeclaration-with-constructor =
    ?ArrowDecl(_, _, _)

  check-ArrowDeclaration :
    DefaultArrowDecl(t1__, t2__) -> <id>
    with <(check-Type <+ error-Type)> t1__
    with <(check-Type <+ error-Type)> t2__

  is-ArrowDeclaration-with-constructor =
    ?DefaultArrowDecl(_, _)

  is-SignatureSection-with-constructor =
    fail

  is-DeclaredArrow-with-constructor =
    fail

  is-ArrowDeclaration-with-constructor =
    fail

  check-SignatureSection :
    amb([h|hs]) -> <check-SignatureSection> h

  check-DeclaredArrow :
    amb([h|hs]) -> <check-DeclaredArrow> h

  check-ArrowDeclaration :
    amb([h|hs]) -> <check-ArrowDeclaration> h

  error-SignatureSection =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureSection instead. ")

  error-DeclaredArrow =
    debug(!"Unexpected constructor. Expected constructor from sort DeclaredArrow instead. ")

  error-ArrowDeclaration =
    debug(!"Unexpected constructor. Expected constructor from sort ArrowDeclaration instead. ")