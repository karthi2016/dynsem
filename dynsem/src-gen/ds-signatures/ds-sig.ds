module src-gen/ds-signatures/ds-sig

imports src-gen/ds-signatures/Common-sig src-gen/ds-signatures/Module-sig src-gen/ds-signatures/Signatures-sig

signature
    sorts
      ModuleSection
      Rule
      PremisesBlock
      Premise
      Relation
      Formula
      Reads
      Source
      Target
      Rel
      LabelComp
      Var
      Cast
      List_
      Entry
      Term
    constructors
      Rules : List(Rule) -> ModuleSection 
      Strict : ID * List(INT) * INT -> Rule 
      Seqstrict : ID * List(INT) * INT -> Rule 
      Axiom : Formula -> Rule 
      Rule : List(Premise) * INFER * Relation -> Rule 
      RuleW : Relation * List(Premise) -> Rule 
      Formula : Formula -> Premise 
      AllFail : Premise 
      PremiseBlock : List(Premise) -> PremisesBlock 
      MergePoint : Premise * PremisesBlock * PremisesBlock -> Premise 
      TryOr : PremisesBlock * PremisesBlock -> Premise 
    constructors
      Match : Term * Term -> Formula 
      NMatch : Term * Term -> Formula 
      TermEq : Term * Term -> Formula 
      TermNeq : Term * Term -> Formula 
      TypeCheck : Var * Type -> Formula 
      TypeCast : Var * Type -> Formula 
      Relation : Reads * Source * Rel * Target -> Relation 
      IsValue : Term -> Formula 
      NoReads : Reads 
      Reads : List(LabelComp) -> Reads 
      Source : Term -> Source 
      Source : Term * List(LabelComp) -> Source 
      Target : Term -> Target 
      Target : Term * List(LabelComp) -> Target 
      Dynamic : Rel 
      NamedDynamic : IDNOHYPH -> Rel 
      DynamicEmitted : List(LabelComp) -> Rel 
      NamedDynamicEmitted : List(LabelComp) * IDNOHYPH -> Rel 
      LabelComp : Type * Term -> LabelComp 
      VarLabelComp : Var -> LabelComp 
    constructors
      VarRef : ID -> Var 
      __Var2Term__ : Var -> Term {implicit}
      Cast : Term * Type -> Cast 
      __Cast2Term__ : Cast -> Term {implicit}
      As : Var * Term -> Term 
      Wld : Term 
      String : STRING -> Term 
      Int : INT -> Term 
      Real : REAL -> Term 
      Con : ID * List(Term) -> Term 
      List_ : List(Term) -> List_ 
      ListTail : List(Term) * Term -> List_ 
      __List2Term__ : List_ -> Term {implicit}
      Fresh : Term 
      True : Term 
      False : Term 
      Map_ : List(Entry) -> Term 
      Bind : Term * Term -> Entry 
      Binds : Term * Term -> Entry 
      MapEntry : Term -> Entry 
      MapSelect : Term * Term -> Term 
      MapHas : Term * Term -> Term 
      MapExtend : Term * Term -> Term 
      MapUnbind : Term * Term -> Term 
      MapKeys : Term -> Term 
      MapValues : Term -> Term 
      SortFunCall : ID * Term * List(Term) -> Term 