module backend/interpreter/project

imports
  backend/interpreter/utils
  backend/utils/-
  
rules

  ds-to-interp-gen-project =
    if get-opt(|CreateProject()) then
      project := <get-opt> GenProject()
      ; <file-exists + mkdir> project
      ; ds-to-interp-gen-project-launchconfig
      ; ds-to-interp-gen-project-pom
      ; ds-to-interp-gen-apt-settings
      ; ds-to-interp-gen-project-gitignore
      ; java-gendir := <get-opt> JavaGenDirAbs()
      ; <file-exists + mkdir> <concat-strings> [java-gendir, "/", <string-replace(|".", "/")> <get-opt> TopPkg()]
      ; <file-exists + mkdir> <concat-strings> [java-gendir, "/", <string-replace(|".", "/")> <get-opt> NativePkg()]
    end

  ds-to-interp-gen-project-pom =
    pom-file := <fopen> (<concat-strings> [<get-opt> GenProject(), "/pom.xml"], "w");
    <fputs> (
      $[<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
          <modelVersion>4.0.0</modelVersion>
          <name>[<get-opt> LangName()] Interpreter</name>
          <groupId>[<get-opt> MavenGroupId()]</groupId>
          <artifactId>[<get-opt> MavenArtifactId()]</artifactId>
          <version>[<get-opt> LangVersion()]</version>
          <build>
            <plugins>
              <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                  <source>1.8</source>
                  <target>1.8</target>
                </configuration>
              </plugin>
              <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                  <execution>
                    <id>auto-clean</id>
                    <phase>clean</phase>
                    <goals>
                      <goal>clean</goal>
                    </goals>
                    <configuration>
                      <filesets>
                        <fileset>
                          <directory>[<get-opt; get-rel-path(|<get-opt> JavaGenDirRel())> TopPkg()]</directory>
                          <includes>**/**</includes>
                        </fileset>
                        <fileset>
                          <directory>[<get-opt; get-rel-path(|<get-opt> TestJavaDir())> TestPkg()]</directory>
                          <includes>**/**</includes>
                        </fileset>
                        <fileset>
                          <directory>${basedir}</directory>
                          <includes>[<get-opt> TargetSpecRel()]</includes>
                        </fileset>
                        <fileset>
                          <directory>${basedir}</directory>
                          <includes>[<get-opt> TargetTableRel()]</includes>
                        </fileset>
                      </filesets>
                    </configuration>
                  </execution>
                </executions>
              </plugin>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                  <argLine>[<get-opt> JVMArgs()]</argLine>
                </configuration>
              </plugin>
            </plugins>
          </build>
          <repositories>
            <repository>
              <id>metaborg-release-repo</id>
              <url>http://artifacts.metaborg.org/content/repositories/releases/</url>
              <releases>
                <enabled>true</enabled>
              </releases>
              <snapshots>
                <enabled>false</enabled>
              </snapshots>
            </repository>
            <repository>
              <id>metaborg-snapshot-repo</id>
              <url>http://artifacts.metaborg.org/content/repositories/snapshots/</url>
              <releases>
                <enabled>false</enabled>
              </releases>
              <snapshots>
                <enabled>true</enabled>
              </snapshots>
            </repository>
          </repositories>
          <dependencies>
            <dependency>
              <groupId>org.metaborg</groupId>
              <artifactId>org.metaborg.meta.lang.dynsem.interpreter</artifactId>
              <version>2.1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
              <groupId>com.oracle.truffle</groupId>
              <artifactId>truffle-api</artifactId>
              <version>0.15</version>
              <type>jar</type>
            </dependency>
            <dependency>
              <groupId>com.oracle.truffle</groupId>
              <artifactId>truffle-dsl-processor</artifactId>
              <version>0.15</version>
            </dependency>
            <dependency>
              <groupId>org.metaborg</groupId>
              <artifactId>org.spoofax.terms</artifactId>
              <version>2.1.0-SNAPSHOT</version>
            </dependency>
          </dependencies>
      </project>], pom-file);
    <fclose> pom-file
  
  ds-to-interp-gen-apt-settings =
    settings-dir := $[[<get-opt> GenProject()]/.settings];
    <file-exists <+ mkdir> settings-dir;
    apt-settings-file := <fopen> ($[[settings-dir]/org.jboss.tools.maven.apt.prefs], "w");
    apt-settings :=
      $[eclipse.preferences.version=1
        org.jboss.tools.maven.apt.aptProcessDuringReconcile=true
        org.jboss.tools.maven.apt.mode=jdt_apt];
    <fputs> (apt-settings, apt-settings-file);
    <fclose> apt-settings-file
  
  ds-to-interp-gen-project-launchconfig =
    launch-file := <fopen> (<concat-strings> [<get-opt> GenProject(), "/", <get-opt> LangName(), ".launch"], "w");
    <fputs> (
    $[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
      <launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
        <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
        <listEntry value="/[<get-opt> MavenArtifactId()]/[<get-opt> JavaGenDirRel()]/[<get-opt; string-replace(|".", "/")> TopPkg()]/[<get-opt> LangName()]Language.java"/>
        </listAttribute>
        <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
        <listEntry value="1"/>
        </listAttribute>
        <booleanAttribute key="org.eclipse.jdt.launching.ATTR_USE_START_ON_FIRST_THREAD" value="true"/>
        <stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.m2e.launchconfig.classpathProvider"/>
        <stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="[<get-opt> TopPkg()].[<get-opt> LangName()]EntryPoint"/>
        <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="${resource_loc}"/>
        <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="[<get-opt> MavenArtifactId()]"/>
        <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.m2e.launchconfig.sourcepathProvider"/>
        <stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="[<get-opt> JVMArgs()]"/>
      </launchConfiguration>
    ], launch-file);
    <fclose> launch-file

  ds-to-interp-gen-project-gitignore =
    gitignore := <fopen> (<concat-strings> [<get-opt> GenProject(), "/", ".gitignore"], "w");
    basedir-java := <get-opt> JavaGenDirRel();
    basedir-test := <get-opt> TestJavaDir();
    <fputs> ($[
      /target/
      [<get-opt> TargetSpecRel()]
      [<get-opt> TargetTableRel()]
      [<get-opt; get-rel-path(|basedir-java)> TopPkg()]
      [<get-opt; get-rel-path(|basedir-java)> TermPkg()]
      [<get-opt; get-rel-path(|basedir-java)> BuildPkg()]
      [<get-opt; get-rel-path(|basedir-java)> MatchPkg()]
      [<get-opt; get-rel-path(|basedir-test)> TestPkg()]
      /[<get-opt> LangName()].launch
      /Test[<get-opt> LangName()].launch
    ], gitignore);
    <fclose> gitignore


  get-rel-path(|basedir):
    pkg -> <concat-strings> [basedir, "/", <string-replace(|".", "/")> pkg]

    