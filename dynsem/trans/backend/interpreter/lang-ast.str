module backend/interpreter/lang-ast

imports
  include/ds
  backend/interpreter/utils
  libjava-front

rules
  
  ds-to-interp-terms-module =
    ?Module(_, <fetch-elem(?Signatures(sig*))>);
    debug(!"ba1 ");
    term* := <mapconcat(debug(!"ba1a "); ds-to-interp-terms-signatures; debug(!"ba1b ") <+ ds-to-interp-terms-report-unsupported)> sig*;
    debug(!"ba2 ");
    type := <ds-to-interp-terms-types-signatures> sig*;
    debug(!"ba3 ");
    ![term*, type]
    ;debug(!"ba4 ")
  
  ds-to-interp-terms-signatures = 
    ?Sorts(<id>);
    map(ds-to-interp-terms-sortdecl)

  ds-to-interp-terms-sortdecl:
    dec@SortDecl(_) ->
      compilation-unit |[
        package ~x:<PackageName>;
        
        import metaborg.meta.lang.dynsem.interpreter.terms.IConTerm;
        
        public interface ~x:<ds-to-interp-terms-types-name> dec extends IConTerm {
        
        }
      ]|

  ds-to-interp-terms-signatures =
    debug(!"ba1a1a ");
    ?Constructors(<id>);
    debug(!"ba1a1b ");    
    map(debug(!"ba1a1c "); ds-to-interp-terms-consdecl; debug(!"ba1a1d "))
    ;debug(!"ba1a1e ")
  
  ds-to-interp-terms-consdecl:
    dec@ConsDecl(name, kid*, s, _) ->
      compilation-unit |[
        package ~x:<debug(!"ba1a1c1 "); PackageName; debug(!"ba1a1c2 ")>;
        
        public class ~x:<ds-to-interp-terms-types-name> dec extends ~x:<ds-to-interp-terms-types-name> s {
          
        }
      ]|
  
  ds-to-interp-terms-types-signatures:
    sig-sec* ->
      compilation-unit |[
        package ~x:<PackageName>;

        import com.oracle.truffle.api.dsl.TypeSystem;
        
        @TypeSystem({ ~type* })
        public class Types {
          
        }
      ]|
    where 
      filter(?Sorts(<id>) + ?Constructors(<id>));
      concat;
      qsort(?(SortDecl(_), ConsDecl(_, _, _, _)));
      map(ds-to-interp-terms-types-name);
      map(!Lit(Class(ClassOrInterfaceType(TypeName(Id(<id>)), None())))) => type*
  
  ds-to-interp-terms-types-name:
    SortDecl(s) -> $[I[s]Term]

  ds-to-interp-terms-types-name:
    SimpleSort(s) -> $[I[s]Term]
  
  ds-to-interp-terms-types-name:
    ConsDecl(name, _, _, _) -> $[[name]Term]

  ds-to-interp-terms-report-unsupported = debug(!"Unsupported signature section "); ![]

