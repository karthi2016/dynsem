module backend/java-backend/emit-types

imports
  signatures/ds-sig

imports
  analysis/lib-analysis
  analysis/constructors

imports
  backend/java-backend/lib-ds2java
  backend/java-backend/utils
  backend/java-backend/analysis-extra
  backend/java-backend/emit-execmethods
  backend/java-backend/emit-arrows

rules /* generate interfaces for sort declarations */
  
  ds2java-abstracts:
    Module(_, section*) -> iface*
    where
      all-type-def*  := <lookup-def-all(|Types())>;
      type-def* := <filter(where(lookup-prop(|SortKind()) => LanguageSort()))> all-type-def*;
      rule* := <fetch-elem(?Rules(<id>))> section*;
      iface* := <map(ds2java-abstracts(|rule*))> type-def*
  
  ds2java-abstracts(|rule*):
    ty-def ->
      compilation-unit |[
        package ~x:<AutoPackageName>;
        
        import org.metaborg.meta.interpreter.framework.*;
        import com.oracle.truffle.api.frame.*;
        import com.oracle.truffle.api.source.*;
        import com.oracle.truffle.api.CompilerDirectives.*;
        import com.github.krukow.clj_lang.*;
        import ds.manual.interpreter.*;
        
        public abstract class x_classname extends AbstractNode {
          
          public x_classname(SourceSection src) {
            super(src);
          }
          
          ~exec*
        }
      ]|
    where
      x_classname := <def-get-name; ds2java-type-to-identifier> ty-def;
      exec* := <ds2java-execmethods(ds2java-throw-statement|rule*)> ty-def
 
