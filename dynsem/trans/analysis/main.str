module analysis/main

imports
	analysis/rename
	analysis/lib-analysis
	analysis/analysis-signatures
	analysis/analysis-rules
	analysis/mark-references
	analysis/query
	include/ds
  lib-ds

rules
	
	analyze =
	  new-analysis-scope(
	    new-type-transitions-scope(
				log-timed(mark-vars | "Marking variable def sites");
			  log-timed(rename-all | "Renaming variables");
			  log-timed(store-all  | "Storing all definitions")
	    )
	  )

  m-in-analysis(s) = new-analysis-scope(new-type-transitions-scope(
  	analyze;
  	s
  ))

  store-all:
    m@Module(n, section*) -> m
    with
      log-timed(
	      log-timed(
	        store-built-ins | "Storing built-in signatures" 
	      );
	      log-timed(
	        <map(try(store-signatures))> section* | "Storing signatures"
	      );
	      log-timed(
	        <check-signatures> section* | "Checking signatures" 
	      );
	      log-timed(
	        where(init-hitcount);
	        <map(try(store-rules))> section*;
	        log-hitcount
	        | "Storing rules"
	      );
	      log-timed(
	        <post-analysis-checks> m | "Post analysis checks"
	      )
      | "Analysis" )

  log-hitcount = 
    where(
	    get-hitcount => (hits, misses);
	    <concat-strings> [ <align-left> (' ', "Memoization efficiency", 27), " : [hits/mises] = [", <int-to-string> hits, "/", <int-to-string> misses, "]" ];
	    log(|Info(),<id>)
	  )

