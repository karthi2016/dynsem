module Toplevel.pp.generated
imports
  trans/coq-semantics/syntax/-
  libstratego-gpp
  lib/runtime/tmpl/pp

strategies
  prettyprintCoq-Reserved =
    ![S(<is-string>)]

  prettyprintCoq-example =
    prettyprintCoq-Reserved


strategies
  prettyprintCoq-Sentence :
    Ltac(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a203, S("Ltac "), b91]
                    )
                  ]
    where a203 := <pp-one-Z(prettyprintCoq-OptLocalPrefix)> a
    where b91 := <pp-H-list(prettyprintCoq-LtacDef|" with")> b

  prettyprintCoq-Tactic :
    Tactic(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a204, S(".")]
                   )
                 ]
    where a204 := <pp-one-Z(prettyprintCoq-TExpr)> a

  prettyprintCoq-example =
    prettyprintCoq-Sentence

  prettyprintCoq-example =
    prettyprintCoq-Tactic


strategies
  prettyprintCoq-OptLocalPrefix :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprintCoq-OptLocalPrefix :
    LocalTactic() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("Local ")]
                       )
                     ]

  prettyprintCoq-example =
    prettyprintCoq-OptLocalPrefix


strategies
  prettyprintCoq-LtacDef :
    LtacDef(a, b, c) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a205
                            , S(" ")
                            , b92
                            , S(" := ")
                            , c39
                            ]
                          )
                        ]
    where a205 := <pp-one-Z(prettyprintCoq-QualId)> a
    where b92 := <pp-H-list(prettyprintCoq-Ident)> b
    where c39 := <pp-one-Z(prettyprintCoq-TExpr)> c

  prettyprintCoq-example =
    prettyprintCoq-LtacDef