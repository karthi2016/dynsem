module pp

imports
  libstratego-lib
  libstratego-gpp
  libspoofax/sdf/pp
  signatures/-
  pp/-
  pp/dynsem/-
  ds

rules
  pp-ds-string =
    parenthesize-ds
    ; prettyprint-ds-start-symbols
    ; !V([], <id>)
    ; box2text-string(|120)
      
  pp-partial-ds-string =
    parenthesize-ds
    ; prettyprint-ds
    ; !V([], <id>)
    ; box2text-string(|120)
    
  pp-partial-ds-string(|sort) =
    parenthesize-ds
    ; prettyprint-ds(|sort)
    ; !V([], <id>)
    ; box2text-string(|120)  
      
rules
  
  prettyprint-Var :
    Var(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-ds-ID)> t1__

  is-Var =
    ?Var(_)

  pp-dynsem-Premise-string =
    parenthesize-ds
    ; prettyprint-ds-Premise
    ; !V([], <id>)
    ; box2text-string(|120)
  
  pp-dynsem-string =
    parenthesize-ds
    ; prettyprint-ds-Module
    ; !V([], <id>)
    ; box2text-string(|80)

  pp-dynsem-Rule-string =
    parenthesize-ds
    ; prettyprint-ds-Rule
    ; !V([], <id>)
    ; box2text-string(|120)

  pp-debug :
    ast -> result
    with
       result := <pp-dynsem-string> ast
    <+ <bottomup(try(not(is-string); not(is-list); not(pp-dynsem-string); debug(!"cannot pp ")))> ast
    ;  result := ""
       
       