module ds2ds/constant-propagation

imports
  include/ds
  ds
  lib-ds
  

rules
  
  constant-propagation-module = Module(!$[[<id>]_constantprop], alltd(constant-propagation-rule))
  
  constant-propagation-rule:
    Rule(prem*, infer, Relation(reads, source, arrow, Target(rhs, tc*))) ->
      Rule(prem'*, infer, Relation(reads, source, arrow, Target(rhs', tc'*)))
    where {| PropagateConstant:
      prem'* := <filter(constant-propagation)> prem*;
      rhs' := <constant-propagation-prop> rhs;
      tc'* := <constant-propagation-prop> tc*
    |}
  
  constant-propagation =
    not(constant-propagation-prop; constant-propagation-rec); constant-propagation-prop
  
  constant-propagation-prop = alltd(PropagateConstant)
  
  constant-propagation-rec:
    f@Formula(Match(const@<is-constant>, v@VarRef(_))) -> f
    where
      v' := <strip-annos> v;
      rules(PropagateConstant:+ v' -> const)
  
  is-constant =
    ?Int(_)
    + ?Real(_)
    + ?True()
    + ?False()
    + ?List([])
