module ds2ds/constant-propagation

imports
  include/ds
  ds
  lib-ds
  

rules
  
  constant-propagation-module = Module(!$[[<id>]_constantprop], alltd(constant-propagation-rule))
  
  constant-propagation-rule =
    {| ConstantValue:
      Rule(foldl(![], constant-propagation), id, Relation(id, id, id, Target(alltd(ConstantValue), alltd(ConstantValue))))
    |}
  
  constant-propagation:
    (Formula(Match(const, VarRef(v))), prem*) -> prem*
    where
      const' := <alltd(constant-propagation); is-constant> const;
      rules(ConstantValue:+ VarRef(v) -> const')
  
  constant-propagation:
    (p, prem*) -> [prem*, <alltd(ConstantValue)> p]
    where
      <not(?Formula(Match(const, VarRef(_))); <alltd(constant-propagation); is-constant> const)> p
  
  is-constant =
    ?Int(_)
    + ?Real(_)
    + ?True()
    + ?False()
    + ?List([])
    + ?ListTail([h], t); <is-constant> h; <is-constant> t





