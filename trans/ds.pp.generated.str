module ds.pp.generated

strategies
  prettyprint-Start :
    File(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a23]
                 )
               ]
    with a23 := <pp-V-list(prettyprint-Item|"1")> a

  prettyprint-Item :
    Rules(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("rules")]
                  )
                , H(
                    []
                  , [S("")]
                  )
                , a24
                ]
    with a24 := <pp-indent(|"2")> [<pp-V-list(prettyprint-Rule|"1")> a]

  prettyprint-Rule :
    Strict(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("strict ")
                           , a25
                           , S(" ")
                           , b10
                           , S("/")
                           , c6
                           ]
                         )
                       ]
    with a25 := <pp-one-Z(prettyprint-ID)> a
    with b10 := <pp-H-list(prettyprint-INT|",")> b
    with c6 := <pp-one-Z(prettyprint-INT)> c

  prettyprint-Rule :
    Seqstrict(a, b, c) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ S("seqstrict ")
                              , a26
                              , S(" ")
                              , b11
                              , S("/")
                              , c7
                              ]
                            )
                          ]
    with a26 := <pp-one-Z(prettyprint-ID)> a
    with b11 := <pp-H-list(prettyprint-INT|",")> b
    with c7 := <pp-one-Z(prettyprint-INT)> c

  prettyprint-Rule :
    Axiom(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a27]
                  )
                ]
    with a27 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Rule :
    Rule(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a28]
                       )
                     , H(
                         [SOpt(HS(), "0")]
                       , [b12]
                       )
                     , H(
                         [SOpt(HS(), "0")]
                       , [c8]
                       )
                     ]
    with a28 := <pp-V-list(prettyprint-Premise|"0", ",")> a
    with b12 := <pp-one-Z(prettyprint-INFER)> b
    with c8 := <pp-one-Z(prettyprint-Formula)> c

  prettyprint-Premise :
    Formula(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a29]
                    )
                  ]
    with a29 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Start

  prettyprint-example =
    prettyprint-Item

  prettyprint-example =
    prettyprint-Rule

  prettyprint-example =
    prettyprint-Premise


strategies
  prettyprint-Formula :
    TermEq(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a30, S(" = "), b13]
                      )
                    ]
    with a30 := <pp-one-Z(prettyprint-Term)> a
    with b13 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Formula :
    Relation(a, b, c, d) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ a31
                                , b14
                                , S(" ")
                                , c9
                                , S(" ")
                                , d1
                                ]
                              )
                            ]
    with a31 := <pp-one-Z(prettyprint-Reads)> a
    with b14 := <pp-one-Z(prettyprint-Source)> b
    with c9 := <pp-one-Z(prettyprint-Rel)> c
    with d1 := <pp-one-Z(prettyprint-Target)> d

  prettyprint-Formula :
    IsValue(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("value("), a32, S(")")]
                    )
                  ]
    with a32 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Reads :
    NoReads() -> [ H(
                     []
                   , [S("")]
                   )
                 ]

  prettyprint-Reads :
    Reads(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a33, S(" |- ")]
                  )
                ]
    with a33 := <pp-H-list(prettyprint-LabelComp|", ")> a

  prettyprint-Source :
    Source(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a34]
                   )
                 ]
    with a34 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Source :
    Source(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ S("(")
                        , a35
                        , S(", ")
                        , b15
                        , S(")")
                        ]
                      )
                    ]
    with a35 := <pp-one-Z(prettyprint-Term)> a
    with b15 := <pp-H-list(prettyprint-LabelComp|", ")> b

  prettyprint-Target :
    Target(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a36]
                   )
                 ]
    with a36 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Target :
    Target(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ S("(")
                        , a37
                        , S(", ")
                        , b16
                        , S(")")
                        ]
                      )
                    ]
    with a37 := <pp-one-Z(prettyprint-Term)> a
    with b16 := <pp-H-list(prettyprint-LabelComp|", ")> b

  prettyprint-Rel :
    Dynamic() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("-->")]
                   )
                 ]

  prettyprint-Rel :
    DynamicEmitted(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("-- "), a38, S(" -->")]
                           )
                         ]
    with a38 := <pp-H-list(prettyprint-LabelComp|", ")> a

  prettyprint-LabelComp :
    LabelComp(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [a39, S(" "), b17]
                         )
                       ]
    with a39 := <pp-one-Z(prettyprint-ID)> a
    with b17 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Formula

  prettyprint-example =
    prettyprint-Reads

  prettyprint-example =
    prettyprint-Source

  prettyprint-example =
    prettyprint-Target

  prettyprint-example =
    prettyprint-Rel

  prettyprint-example =
    prettyprint-LabelComp


strategies
  prettyprint-Term :
    Con(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a40
                     , S("(")
                     , b18
                     , S(")")
                     ]
                   )
                 ]
    with a40 := <pp-one-Z(prettyprint-ID)> a
    with b18 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Var(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a41]
                )
              ]
    with a41 := <pp-one-Z(prettyprint-ID)> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("[ "), a42, S(" ]")]
                 )
               ]
    with a42 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    Map(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("{"), a43, S("}")]
                )
              ]
    with a43 := <pp-H-list(prettyprint-Entry|", ")> a

  prettyprint-Term :
    String(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a44]
                   )
                 ]
    with a44 := <pp-one-Z(prettyprint-STRING)> a

  prettyprint-Entry :
    Bind(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a45, S(" |--> "), b19]
                    )
                  ]
    with a45 := <pp-one-Z(prettyprint-Term)> a
    with b19 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term

  prettyprint-example =
    prettyprint-Entry