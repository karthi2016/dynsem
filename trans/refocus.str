module refocus

imports
  libstratego-lib
  libstratego-gpp
  libstratego-aterm
  include/ds
  lib/editor-common.generated
  generate
  
rules
  
  refocus :
    Rule(prem*, infer, 
          Relation(reads, Source(lhs,sc*), DynamicEmitted(em1*), Target(rhs,tc*))) -> 
    
    Rule(<conc>(prem*,[prem]), infer, 
          Relation(reads, Source(lhs,sc*), DynamicEmitted(em3*), Target(Var(x),[])))
    
    where x := <new>;
          em2* := <map(\LabelComp(name, t) -> LabelComp(name, Var(<new>))\)>em1*; // fresh variable
          em3* := <zip(\(LabelComp(name, t1), LabelComp(name, t2)) -> LabelComp(name, Con("Conc", [t1, t2]))\)> (em1*, em2*); 
          prem := 
            Formula(Relation(NoReads(), 
                      Source(Con("Exec", [rhs]), tc*), DynamicEmitted(em2*), Target(Var(x))))
                      
  refocus-rules = desugar-all; alltd(refocus)
          
    
    
    
    
