module Coercion.pp.generated
imports
  trans/coq-semantics/syntax/-
  libstratego-gpp
  lib/runtime/tmpl/pp

strategies
  prettyprintCoq-Sentence :
    Coercion(a, b, c) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("Coercion ")
                             , a94
                             , S(" : ")
                             , b44
                             , S(" >-> ")
                             , c16
                             , S(".")
                             ]
                           )
                         ]
    where a94 := <pp-one-Z(prettyprintCoq-QualId)> a
    where b44 := <pp-one-Z(prettyprintCoq-Class)> b
    where c16 := <pp-one-Z(prettyprintCoq-Class)> c

  prettyprintCoq-example =
    prettyprintCoq-Sentence


strategies
  prettyprintCoq-Reserved =
    ![S(<is-string>)]

  prettyprintCoq-example =
    prettyprintCoq-Reserved


strategies
  prettyprintCoq-Class :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a95]
           )
         ]
    where a95 := <pp-one-Z(prettyprintCoq-Term)> a

  prettyprintCoq-example =
    prettyprintCoq-Class