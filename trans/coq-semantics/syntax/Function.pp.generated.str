module Function.pp.generated
imports
  trans/coq-semantics/syntax/-
  libstratego-gpp
  lib/runtime/tmpl/pp

strategies
  prettyprintCoq-Term :
    Function(a, b, c, d, e) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ S("Function ")
                                   , a96
                                   , S(" ")
                                   , b45
                                   , c17
                                   , S(" : ")
                                   , d10
                                   ]
                                 )
                               , e6
                               ]
    where a96 := <pp-one-Z(prettyprintCoq-Ident)> a
    where b45 := <pp-H-list(prettyprintCoq-Binder|" ")> b
    where c17 := <pp-one-Z(prettyprintCoq-OptDecreaseAnnot)> c
    where d10 := <pp-one-Z(prettyprintCoq-Type)> d
    where e6 := <pp-indent(|"2")> [<pp-one-Z(prettyprintCoq-Term)> e]

  prettyprintCoq-example =
    prettyprintCoq-Term


strategies
  prettyprintCoq-OptDecreaseAnnot :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprintCoq-OptDecreaseAnnot :
    DecreaseAnnot(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S(" {"), a97, S("}")]
                          )
                        ]
    where a97 := <pp-one-Z(prettyprintCoq-DecreaseAnnot)> a

  prettyprintCoq-DecreaseAnnot :
    DecreaseStruct(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("struct "), a98]
                           )
                         ]
    where a98 := <pp-one-Z(prettyprintCoq-Ident)> a

  prettyprintCoq-DecreaseAnnot :
    DecreaseMeasure(a, b) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("measure ")
                                 , a99
                                 , S(" ")
                                 , b46
                                 ]
                               )
                             ]
    where a99 := <pp-one-Z(prettyprintCoq-Term)> a
    where b46 := <pp-one-Z(prettyprintCoq-Ident)> b

  prettyprintCoq-DecreaseAnnot :
    DecreaseWF(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ S("wf ")
                            , a100
                            , S(" ")
                            , b47
                            ]
                          )
                        ]
    where a100 := <pp-one-Z(prettyprintCoq-Term)> a
    where b47 := <pp-one-Z(prettyprintCoq-Ident)> b

  prettyprintCoq-example =
    prettyprintCoq-OptDecreaseAnnot

  prettyprintCoq-example =
    prettyprintCoq-DecreaseAnnot