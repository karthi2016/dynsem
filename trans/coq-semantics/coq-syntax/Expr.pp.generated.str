module Expr.pp.generated

imports
  lib/runtime/tmpl/pp
  libstratego-gpp
  trans/coq-semantics/coq-syntax/-

strategies
  prettyprint-TExpr :
    ExprSeq(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a539, S("; "), b266]
                       )
                     ]
    where a539 := <pp-one-Z(prettyprint-TExpr)> a
    where b266 := <pp-one-Z(prettyprint-TExpr)> b

  prettyprint-TExpr :
    ExprSeqAlts(a, b) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ a540
                             , S("; [")
                             , b267
                             , S("]")
                             ]
                           )
                         ]
    where a540 := <pp-one-Z(prettyprint-TExpr)> a
    where b267 := <pp-H-list(prettyprint-TExpr|" | ")> b

  prettyprint-TExpr :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a541]
           )
         ]
    where a541 := <pp-one-Z(prettyprint-TacExpr3)> a

  prettyprint-example =
    prettyprint-TExpr


strategies
  prettyprint-TacExpr3 :
    DoTac(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [ S("do")
                       , a542
                       , S(" ")
                       , b268
                       ]
                     )
                   ]
    where a542 := <pp-one-Z(prettyprint-OptTime)> a
    where b268 := <pp-one-Z(prettyprint-TacExpr3)> b

  prettyprint-TacExpr3 :
    Progress(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("progress "), a543]
                     )
                   ]
    where a543 := <pp-one-Z(prettyprint-TacExpr3)> a

  prettyprint-TacExpr3 :
    Repeat(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("repeat "), a544]
                   )
                 ]
    where a544 := <pp-one-Z(prettyprint-TacExpr3)> a

  prettyprint-TacExpr3 :
    Try(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("try "), a545]
                )
              ]
    where a545 := <pp-one-Z(prettyprint-TacExpr3)> a

  prettyprint-TacExpr3 :
    Timeout(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ S("timeout")
                         , a546
                         , S(" ")
                         , b269
                         ]
                       )
                     ]
    where a546 := <pp-one-Z(prettyprint-OptTime)> a
    where b269 := <pp-one-Z(prettyprint-TacExpr3)> b

  prettyprint-TacExpr3 :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a547]
           )
         ]
    where a547 := <pp-one-Z(prettyprint-TacExpr2)> a

  prettyprint-example =
    prettyprint-TacExpr3


strategies
  prettyprint-OptTime :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptTime :
    Natural(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a548, S(" ")]
                    )
                  ]
    where a548 := <pp-one-Z(prettyprint-Num)> a

  prettyprint-OptTime :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a549, S(" ")]
           )
         ]
    where a549 := <pp-one-Z(prettyprint-Ident)> a

  prettyprint-example =
    prettyprint-OptTime


strategies
  prettyprint-TacExpr2 :
    Alts(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a550, S(" || "), b270]
                    )
                  ]
    where a550 := <pp-one-Z(prettyprint-TacExpr1)> a
    where b270 := <pp-one-Z(prettyprint-TacExpr3)> b

  prettyprint-TacExpr2 :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a551]
           )
         ]
    where a551 := <pp-one-Z(prettyprint-TacExpr1)> a

  prettyprint-example =
    prettyprint-TacExpr2


strategies
  prettyprint-TacExpr1 :
    Fun(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ S("fun ")
                     , a552
                     , S(" => ")
                     , b271
                     ]
                   )
                 ]
    where a552 := <pp-H-list(prettyprint-Ident)> a
    where b271 := <pp-one-Z(prettyprint-TAtom)> b

  prettyprint-TacExpr1 :
    LetTac(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("let")
                           , a553
                           , S(" ")
                           , b272
                           , S(" in ")
                           , c104
                           ]
                         )
                       ]
    where a553 := <pp-one-Z(prettyprint-OptRec)> a
    where b272 := <pp-H-list(prettyprint-LetClause|" with")> b
    where c104 := <pp-one-Z(prettyprint-TAtom)> c

  prettyprint-TacExpr1 :
    MatchGoal(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("match goal with "), a554, S(" end")]
                      )
                    ]
    where a554 := <pp-H-list(prettyprint-ContextRule|" |")> a

  prettyprint-TacExpr1 :
    MatchRevGoal(a) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("match reverse goal with "), a555, S(" end")]
                         )
                       ]
    where a555 := <pp-H-list(prettyprint-ContextRule|" |")> a

  prettyprint-TacExpr1 :
    MatchExpr(a, b) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ S("match ")
                           , a556
                           , S(" with ")
                           , b273
                           , S(" end")
                           ]
                         )
                       ]
    where a556 := <pp-one-Z(prettyprint-TExpr)> a
    where b273 := <pp-H-list(prettyprint-MatchRule|" |")> b

  prettyprint-TacExpr1 :
    LMatchGoal(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("lazymatch goal with "), a557, S(" end")]
                       )
                     ]
    where a557 := <pp-H-list(prettyprint-ContextRule|" |")> a

  prettyprint-TacExpr1 :
    LMatchRevGoal(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("lazymatch reverse goal with "), a558, S(" end")]
                          )
                        ]
    where a558 := <pp-H-list(prettyprint-ContextRule|" |")> a

  prettyprint-TacExpr1 :
    LMatchExpr(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ S("lazymatch ")
                            , a559
                            , S(" with ")
                            , b274
                            , S(" end")
                            ]
                          )
                        ]
    where a559 := <pp-one-Z(prettyprint-TExpr)> a
    where b274 := <pp-H-list(prettyprint-MatchRule|" |")> b

  prettyprint-TacExpr1 :
    Abstract(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("abstract "), a560]
                     )
                   ]
    where a560 := <pp-one-Z(prettyprint-TAtom)> a

  prettyprint-TacExpr1 :
    AbstractUsing(a, b) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ S("abstract ")
                               , a561
                               , S(" using ")
                               , b275
                               ]
                             )
                           ]
    where a561 := <pp-one-Z(prettyprint-TAtom)> a
    where b275 := <pp-one-Z(prettyprint-Ident)> b

  prettyprint-TacExpr1 :
    First(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("first [ "), a562, S(" ]")]
                  )
                ]
    where a562 := <pp-H-list(prettyprint-TExpr|" |")> a

  prettyprint-TacExpr1 :
    Solve(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("solve [ "), a563, S(" ]")]
                  )
                ]
    where a563 := <pp-H-list(prettyprint-TExpr|" |")> a

  prettyprint-TacExpr1 :
    IdTac(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("idtac "), a564]
                  )
                ]
    where a564 := <pp-H-list(prettyprint-MsgToken)> a

  prettyprint-TacExpr1 :
    Fail(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("fail"), a565, b276]
                    )
                  ]
    where a565 := <pp-one-Z(prettyprint-OptNatural)> a
    where b276 := <pp-one-Z(prettyprint-OptMsgTokens)> b

  prettyprint-TacExpr1 :
    Fresh(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("fresh"), a566]
                  )
                ]
    where a566 := <pp-one-Z(prettyprint-OptString)> a

  prettyprint-TacExpr1 :
    Context(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("context "), a567, b277]
                       )
                     ]
    where a567 := <pp-one-Z(prettyprint-Ident)> a
    where b277 := <pp-one-Z(prettyprint-OptTerm)> b

  prettyprint-TacExpr1 :
    Eval(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [ S("eval ")
                      , a568
                      , S(" in ")
                      , b278
                      ]
                    )
                  ]
    where a568 := <pp-one-Z(prettyprint-RedExpr)> a
    where b278 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-TacExpr1 :
    TypeOf(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("type of "), a569]
                   )
                 ]
    where a569 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-TacExpr1 :
    External(a, b, c) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ S("external ")
                             , a570
                             , S(" ")
                             , b279
                             , S(" ")
                             , c105
                             ]
                           )
                         ]
    where a570 := <pp-one-Z(prettyprint-String)> a
    where b279 := <pp-one-Z(prettyprint-String)> b
    where c105 := <pp-H-list(prettyprint-TacArg)> c

  prettyprint-TacExpr1 :
    ConstrTerm(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("constr : "), a571]
                       )
                     ]
    where a571 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-TacExpr1 :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a572]
           )
         ]
    where a572 := <pp-one-Z(prettyprint-AtomicTactic)> a

  prettyprint-TacExpr1 :
    QualTactic(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a573, S(" "), b280]
                          )
                        ]
    where a573 := <pp-one-Z(prettyprint-QualId)> a
    where b280 := <pp-H-list(prettyprint-TacArg)> b

  prettyprint-TacExpr1 :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a574]
           )
         ]
    where a574 := <pp-one-Z(prettyprint-TAtom)> a

  prettyprint-TacExpr1 :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a575, S(")")]
                          )
                        ]
    where a575 := <pp-one-Z(prettyprint-TExpr)> a

  prettyprint-example =
    prettyprint-TacExpr1


strategies
  prettyprint-OptRec :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptRec :
    Rec() -> [ H(
                 [SOpt(HS(), "0")]
               , [S(" rec")]
               )
             ]

  prettyprint-OptMsgTokens :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptMsgTokens :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" "), a576]
           )
         ]
    where a576 := <pp-H-list(prettyprint-MsgToken)> a

  prettyprint-OptNatural :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptNatural :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a577]
           )
         ]
    where a577 := <pp-one-Z(prettyprint-Num)> a

  prettyprint-OptString :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptString :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a578]
           )
         ]
    where a578 := <pp-one-Z(prettyprint-Num)> a

  prettyprint-OptTerm :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptTerm :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a579]
           )
         ]
    where a579 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-OptRec

  prettyprint-example =
    prettyprint-OptMsgTokens

  prettyprint-example =
    prettyprint-OptNatural

  prettyprint-example =
    prettyprint-OptString

  prettyprint-example =
    prettyprint-OptTerm


strategies
  prettyprint-TAtom :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a580]
           )
         ]
    where a580 := <pp-one-Z(prettyprint-QualId)> a

  prettyprint-TAtom :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a581]
           )
         ]
    where a581 := <pp-one-Z(prettyprint-Num)> a

  prettyprint-TAtom :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("(TExpr)")]
            )
          ]

  prettyprint-TAtom :
    Unit() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("()")]
                )
              ]

  prettyprint-example =
    prettyprint-TAtom


strategies
  prettyprint-MsgToken :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a582]
           )
         ]
    where a582 := <pp-one-Z(prettyprint-String)> a

  prettyprint-MsgToken :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a583]
           )
         ]
    where a583 := <pp-one-Z(prettyprint-Ident)> a

  prettyprint-MsgToken :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a584]
           )
         ]
    where a584 := <pp-one-Z(prettyprint-Num)> a

  prettyprint-example =
    prettyprint-MsgToken


strategies
  prettyprint-TacArg :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a585]
           )
         ]
    where a585 := <pp-one-Z(prettyprint-QualId)> a

  prettyprint-TacArg :
    Unit() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("()")]
                )
              ]

  prettyprint-TacArg :
    AtomArg(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("ltac : "), a586]
                    )
                  ]
    where a586 := <pp-one-Z(prettyprint-TAtom)> a

  prettyprint-TacArg :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a587]
           )
         ]
    where a587 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-TacArg


strategies
  prettyprint-LetClause :
    LetClause(a, b, c) -> [ H(
                              [SOpt(HS(), "0")]
                            , [a588, b281, S(" := "), c106]
                            )
                          ]
    where a588 := <pp-one-Z(prettyprint-Ident)> a
    where b281 := <pp-one-Z(prettyprint-OptNames)> b
    where c106 := <pp-one-Z(prettyprint-TExpr)> c

  prettyprint-OptNames :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptNames :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" "), a589]
           )
         ]
    where a589 := <pp-H-list(prettyprint-Name)> a

  prettyprint-example =
    prettyprint-LetClause

  prettyprint-example =
    prettyprint-OptNames


strategies
  prettyprint-ContextRule :
    PatContext(a, b, c) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ a590
                               , S("|- ")
                               , b282
                               , S(" => ")
                               , c107
                               ]
                             )
                           ]
    where a590 := <pp-one-Z(prettyprint-OptContextHyps)> a
    where b282 := <pp-one-Z(prettyprint-Pattern)> b
    where c107 := <pp-one-Z(prettyprint-TExpr)> c

  prettyprint-ContextRule :
    WldContext(a) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("_ => "), a591]
                       )
                     ]
    where a591 := <pp-one-Z(prettyprint-TExpr)> a

  prettyprint-OptContextHyps :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptContextHyps :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a592, S(" ")]
           )
         ]
    where a592 := <pp-H-list(prettyprint-ContextHyp|", ")> a

  prettyprint-example =
    prettyprint-ContextRule

  prettyprint-example =
    prettyprint-OptContextHyps


strategies
  prettyprint-ContextHyp :
    ContextHyp(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a593, S(" : "), b283]
                          )
                        ]
    where a593 := <pp-one-Z(prettyprint-Name)> a
    where b283 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-ContextHyp :
    ContextHypAssign(a, b, c) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [a594, S(" := "), b284, c108]
                                   )
                                 ]
    where a594 := <pp-one-Z(prettyprint-Name)> a
    where b284 := <pp-one-Z(prettyprint-Pattern)> b
    where c108 := <pp-one-Z(prettyprint-OptCPattern)> c

  prettyprint-OptCPattern :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptCPattern :
    OptCPattern(a) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S(" : "), a595]
                        )
                      ]
    where a595 := <pp-one-Z(prettyprint-Pattern)> a

  prettyprint-example =
    prettyprint-ContextHyp

  prettyprint-example =
    prettyprint-OptCPattern


strategies
  prettyprint-MatchRule :
    MatchPattern(a, b) -> [ H(
                              [SOpt(HS(), "0")]
                            , [a596, S(" => "), b285]
                            )
                          ]
    where a596 := <pp-one-Z(prettyprint-Pattern)> a
    where b285 := <pp-one-Z(prettyprint-TExpr)> b

  prettyprint-MatchRule :
    MatchContext(a, b, c) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("context")
                                 , a597
                                 , b286
                                 , S(" => ")
                                 , c109
                                 ]
                               )
                             ]
    where a597 := <pp-one-Z(prettyprint-OptIdent)> a
    where b286 := <pp-one-Z(prettyprint-OptPattern)> b
    where c109 := <pp-one-Z(prettyprint-TExpr)> c

  prettyprint-MatchRule :
    MatchAppContext(a, b, c) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [ S("appcontext")
                                    , a598
                                    , b287
                                    , S(" => ")
                                    , c110
                                    ]
                                  )
                                ]
    where a598 := <pp-one-Z(prettyprint-OptIdent)> a
    where b287 := <pp-one-Z(prettyprint-OptPattern)> b
    where c110 := <pp-one-Z(prettyprint-TExpr)> c

  prettyprint-MatchRule :
    MatchWld(a) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("_ => "), a599]
                     )
                   ]
    where a599 := <pp-one-Z(prettyprint-TExpr)> a

  prettyprint-OptIdent :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptIdent :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" "), a600]
           )
         ]
    where a600 := <pp-one-Z(prettyprint-Ident)> a

  prettyprint-OptPattern :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptPattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" "), a601]
           )
         ]
    where a601 := <pp-one-Z(prettyprint-Pattern)> a

  prettyprint-example =
    prettyprint-MatchRule

  prettyprint-example =
    prettyprint-OptIdent

  prettyprint-example =
    prettyprint-OptPattern


strategies
  prettyprint-RedExpr :
    RedRed() -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("red")]
                  )
                ]

  prettyprint-RedExpr :
    RedHnf() -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("hnf")]
                  )
                ]

  prettyprint-RedExpr :
    RedCompute() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("compute")]
                      )
                    ]

  prettyprint-RedExpr :
    RedSimpl() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("simpl")]
                    )
                  ]

  prettyprint-RedExpr :
    RedCbv() -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("cbv")]
                  )
                ]

  prettyprint-RedExpr :
    RedLazy() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("lazy")]
                   )
                 ]

  prettyprint-RedExpr :
    RedUnfold() -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("unfold")]
                     )
                   ]

  prettyprint-RedExpr :
    RedFold() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("fold")]
                   )
                 ]

  prettyprint-RedExpr :
    RedPattern() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("pattern")]
                      )
                    ]

  prettyprint-example =
    prettyprint-RedExpr