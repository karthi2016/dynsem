module Module.pp.generated

imports
  lib/runtime/tmpl/pp
  libstratego-gpp
  trans/coq-semantics/coq-syntax/-

strategies
  prettyprint-Reserved =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-Reserved


strategies
  prettyprint-Module :
    InteractiveModule(a, b, c, d, e, f) -> [ H(
                                               [SOpt(HS(), "0")]
                                             , [ S("Module ")
                                               , a500
                                               , b245
                                               , c90
                                               , d44
                                               , S(".")
                                               ]
                                             )
                                           , e18
                                           , H(
                                               [SOpt(HS(), "0")]
                                             , [S("End "), f6, S(".")]
                                             )
                                           ]
    where a500 := <pp-one-Z(prettyprint-OptModuleBindingKeywordPrefix)> a
    where b245 := <pp-one-Z(prettyprint-Ident)> b
    where c90 := <pp-one-Z(prettyprint-OptModuleBindings)> c
    where d44 := <pp-one-Z(prettyprint-OptModuleTypes)> d
    where e18 := <pp-indent(|"2")> [<pp-V-list(prettyprint-ModContent|"1")> e]
    where f6 := <pp-one-Z(prettyprint-Ident)> f

  prettyprint-example =
    prettyprint-Module


strategies
  prettyprint-ModuleBindingKeyword :
    Import() -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("Import")]
                  )
                ]

  prettyprint-ModuleBindingKeyword :
    Export() -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("Export")]
                  )
                ]

  prettyprint-OptModuleBindingKeywordPrefix :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptModuleBindingKeywordPrefix :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a501, S(" ")]
           )
         ]
    where a501 := <pp-one-Z(prettyprint-ModuleBindingKeyword)> a

  prettyprint-example =
    prettyprint-ModuleBindingKeyword

  prettyprint-example =
    prettyprint-OptModuleBindingKeywordPrefix


strategies
  prettyprint-ModuleType :
    QualifiedModule(a) -> [ H(
                              [SOpt(HS(), "0")]
                            , [a502]
                            )
                          ]
    where a502 := <pp-one-Z(prettyprint-QualId)> a

  prettyprint-ModuleType :
    ModuleWithDefinition(a, b, c) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [ a503
                                         , S(" with Definition ")
                                         , b246
                                         , S(" := ")
                                         , c91
                                         ]
                                       )
                                     ]
    where a503 := <pp-one-Z(prettyprint-ModuleType)> a
    where b246 := <pp-one-Z(prettyprint-QualId)> b
    where c91 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-ModuleType :
    ModuleWithModule(a, b, c) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [ a504
                                     , S(" with Module ")
                                     , b247
                                     , S(" := ")
                                     , c92
                                     ]
                                   )
                                 ]
    where a504 := <pp-one-Z(prettyprint-ModuleType)> a
    where b247 := <pp-one-Z(prettyprint-QualId)> b
    where c92 := <pp-one-Z(prettyprint-QualId)> c

  prettyprint-ModuleType :
    QualifiedModuleSeq(a, b) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [a505, S(" "), b248]
                                  )
                                ]
    where a505 := <pp-one-Z(prettyprint-QualId)> a
    where b248 := <pp-H-list(prettyprint-QualId)> b

  prettyprint-ModuleType :
    QualifiedModuleBangSeq(a, b) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [ S("!")
                                        , a506
                                        , S(" ")
                                        , b249
                                        ]
                                      )
                                    ]
    where a506 := <pp-one-Z(prettyprint-QualId)> a
    where b249 := <pp-H-list(prettyprint-QualId)> b

  prettyprint-ModuleType :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a507, S(")")]
                          )
                        ]
    where a507 := <pp-one-Z(prettyprint-ModuleType)> a

  prettyprint-OptModuleTypes :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptModuleTypes :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" : "), a508]
           )
         ]
    where a508 := <pp-one-Z(prettyprint-ModuleType)> a

  prettyprint-OptModuleTypes :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" <: "), a509]
           )
         ]
    where a509 := <pp-H-list(prettyprint-ModuleType|" <:")> a

  prettyprint-example =
    prettyprint-ModuleType

  prettyprint-example =
    prettyprint-OptModuleTypes


strategies
  prettyprint-ModuleBinding :
    ModuleBinding(a, b, c) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("(")
                                  , a510
                                  , b250
                                  , S(" ")
                                  , c93
                                  , S(")")
                                  ]
                                )
                              ]
    where a510 := <pp-one-Z(prettyprint-OptModuleBindingKeywordPrefix)> a
    where b250 := <pp-H-list(prettyprint-Ident)> b
    where c93 := <pp-one-Z(prettyprint-ModuleType)> c

  prettyprint-OptModuleBindings :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptModuleBindings :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [S(" "), a511]
           )
         ]
    where a511 := <pp-H-list(prettyprint-ModuleBinding|" ")> a

  prettyprint-example =
    prettyprint-ModuleBinding

  prettyprint-example =
    prettyprint-OptModuleBindings


strategies
  prettyprint-ModContent :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a512]
           )
         ]
    where a512 := <pp-one-Z(prettyprint-Sentence)> a

  prettyprint-ModContent :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a513]
           )
         ]
    where a513 := <pp-one-Z(prettyprint-Module)> a

  prettyprint-ModContent :
    Include(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("Include "), a514]
                    )
                  ]
    where a514 := <pp-H-list(prettyprint-Ident|" <+")> a

  prettyprint-example =
    prettyprint-ModContent


strategies
  prettyprint-Module :
    ModuleDef(a, b, c, d) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("Module ")
                                 , a515
                                 , b251
                                 , c94
                                 , S(" := ")
                                 , d45
                                 , S(".")
                                 ]
                               )
                             ]
    where a515 := <pp-one-Z(prettyprint-Ident)> a
    where b251 := <pp-one-Z(prettyprint-OptModuleBindings)> b
    where c94 := <pp-one-Z(prettyprint-OptModuleTypes)> c
    where d45 := <pp-one-Z(prettyprint-ModuleExpression)> d

  prettyprint-Module :
    ModuleDefs(a, b, c) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ S("Module ")
                               , a516
                               , b252
                               , S(" := ")
                               , c95
                               ]
                             )
                           ]
    where a516 := <pp-one-Z(prettyprint-Ident)> a
    where b252 := <pp-one-Z(prettyprint-OptModuleBindings)> b
    where c95 := <pp-H-list(prettyprint-ModuleExpression|"<+")> c

  prettyprint-example =
    prettyprint-Module


strategies
  prettyprint-ModuleExpression :
    ModuleExpression(a) -> [ H(
                               [SOpt(HS(), "0")]
                             , [a517]
                             )
                           ]
    where a517 := <pp-H-list(prettyprint-QualId)> a

  prettyprint-ModuleExpression :
    ModuleBangExpression(a) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("!"), a518]
                                 )
                               ]
    where a518 := <pp-H-list(prettyprint-QualId)> a

  prettyprint-example =
    prettyprint-ModuleExpression


strategies
  prettyprint-Module :
    ModuleType(a, b, c, d) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("Module Type ")
                                  , a519
                                  , b253
                                  , S(".")
                                  ]
                                )
                              , c96
                              , H(
                                  [SOpt(HS(), "0")]
                                , [S("End "), d46, S(".")]
                                )
                              ]
    where a519 := <pp-one-Z(prettyprint-Ident)> a
    where b253 := <pp-one-Z(prettyprint-OptModuleBindings)> b
    where c96 := <pp-indent(|"2")> [<pp-H-list(prettyprint-ModTypeContent)> c]
    where d46 := <pp-one-Z(prettyprint-Ident)> d

  prettyprint-example =
    prettyprint-Module


strategies
  prettyprint-ModTypeContent :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a520]
           )
         ]
    where a520 := <pp-one-Z(prettyprint-ModContent)> a

  prettyprint-ModTypeContent :
    InlineAssumption(a, b) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [a521, S(" Inline "), b254]
                                )
                              ]
    where a521 := <pp-one-Z(prettyprint-AssumptionKeyword)> a
    where b254 := <pp-one-Z(prettyprint-Assums)> b

  prettyprint-example =
    prettyprint-ModTypeContent


strategies
  prettyprint-Module :
    ModuleTypeDef(a, b, c) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("Module Type ")
                                  , a522
                                  , b255
                                  , S(" := ")
                                  , c97
                                  ]
                                )
                              ]
    where a522 := <pp-one-Z(prettyprint-Ident)> a
    where b255 := <pp-one-Z(prettyprint-OptModuleBindings)> b
    where c97 := <pp-H-list(prettyprint-ModuleType|" <+")> c

  prettyprint-example =
    prettyprint-Module


strategies
  prettyprint-Sentence :
    Import(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a523
                        , S("Import ")
                        , b256
                        , S(".")
                        ]
                      )
                    ]
    where a523 := <pp-one-Z(prettyprint-OptRequirePrefix)> a
    where b256 := <pp-one-Z(prettyprint-QualId)> b

  prettyprint-Sentence :
    Export(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a524
                        , S("Export ")
                        , b257
                        , S(".")
                        ]
                      )
                    ]
    where a524 := <pp-one-Z(prettyprint-OptRequirePrefix)> a
    where b257 := <pp-one-Z(prettyprint-QualId)> b

  prettyprint-example =
    prettyprint-Sentence


strategies
  prettyprint-OptRequirePrefix :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-OptRequirePrefix :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("Require ")]
            )
          ]

  prettyprint-example =
    prettyprint-OptRequirePrefix