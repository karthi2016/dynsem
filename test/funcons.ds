rules

   value(True())

   value(False())

   Not(True()) = False()
   
   Not(False()) = True()
  
   strict And 1,2/2
   
   And(True(),x) = x
   
   And(False(),x) = False()

   strict Cond 1/3

   Cond(True(),x,y) = x
   
   Cond(False(),x,y) = y

   value(Skip())
  
   seqstrict Seq 1,2/2
   
   Seq(x,y) = y
   
   Print(x) -- Print x --> Skip()
   
   Env env |- BoundValue(i) --> MapSelect(i,env)

   strict Let 2/3
      
   MapExtend(env,Map1(i,val)) = env1 ,
   Env env1 |- body --> body'
   -----------------------------------------------------
   Env env |- Let(i,val,body) --> Let(i,val,body')
   
   value(bodyval)
   -------------------------------
   Let(i,val,bodyval) --> bodyval
   
   Start() = Let(X(),False(),Not(X()))
